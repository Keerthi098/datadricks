{
	"name": "Incremental_odata",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "configjson",
						"type": "DatasetReference",
						"parameters": {
							"container_name": "odata",
							"folder_name": "config",
							"filename": "incremental_load.odata.txt"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ODataSource",
									"query": {
										"value": "@concat('filter',item().LastProcessValueColumn,'ge',item().LastProcessValue)",
										"type": "Expression"
									},
									"httpRequestTimeout": "00:05:00"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ODataResource1",
									"type": "DatasetReference",
									"parameters": {
										"Table_name": "@item().Table_name"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "configjson",
									"type": "DatasetReference",
									"parameters": {
										"container_name": "odata",
										"folder_name": "Incremental_load",
										"filename": {
											"value": "@concat(formatDateTime(utcNow(),'yyyy/MM/dd'),'/',item().Table_Name)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Notebook1",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/venkimelbourne_yahoo.com.au#ext#@venkimelbourneyahoocom.onmicrosoft.com/Odata_notebook",
								"baseParameters": {
									"Table_Name": {
										"value": "@item().Table_Name",
										"type": "Expression"
									},
									"LastProcessValueColumn": {
										"value": "@item().LastProcessValueColumn",
										"type": "Expression"
									},
									"Load_Date": {
										"value": "@formatDateTime(utcNow(),'yyyy/MM/dd')",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "odata_databricks",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Notebook1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "store",
								"value": {
									"value": "@string(activity('Notebook1').output.runOutput)",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"store": {
				"type": "String"
			}
		},
		"annotations": []
	}
}