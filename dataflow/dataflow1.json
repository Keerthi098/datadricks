{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dataflowsource",
						"type": "DatasetReference"
					},
					"name": "TransformselectedCSV"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataflowoutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          transaction_id as short,",
				"          transactional_date as timestamp,",
				"          product_id as string,",
				"          customer_id as short,",
				"          payment as string,",
				"          credit_card as long,",
				"          loyalty_card as boolean,",
				"          cost as double,",
				"          quantity as short,",
				"          price as double,",
				"          {_c10} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TransformselectedCSV",
				"split1@Customerbasedonpaymentmode aggregate(groupBy(HighestPaidProduct = customer_id),",
				"     price = max(price)) ~> aggregate1",
				"TransformselectedCSV derive(payment = coalesce(payment,'N/A')) ~> derivedColumn1",
				"derivedColumn1 split(payment=='americanexpress',",
				"     disjoint: false) ~> split1@(Customerbasedonpaymentmode)",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}